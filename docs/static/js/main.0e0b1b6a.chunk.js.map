{"version":3,"sources":["pomodoro/ModifyTimeControl.js","pomodoro/TimerControl.js","utils/class-names/index.js","pomodoro/TimerDisplay.js","pomodoro/Pomodoro.js","utils/useInterval/index.js","App.js","index.js"],"names":["ModifyTimeControl","timeData","buttonState","formatTime","modifyDuration","className","data-testid","focusDuration","type","name","disabled","modifyDurationButtonsDisabled","onClick","style","zIndex","breakDuration","TimerControl","classNameToBoolean","playPause","stop","isTimerRunning","role","aria-label","title","playButtonDisabled","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","stopButtonDisabled","TimerDisplay","pageState","display","showSession","sessionTitle","currentRemaining","height","aria-valuemin","aria-valuemax","aria-valuenow","remainingAriaValue","width","Pomodoro","initialTimeState","focusRemaining","breakRemaining","initialVisibleElementStates","initialButtonStates","activeButtonStates","seconds","formattedSeconds","parseInt","mm","Math","floor","ss","useState","setTimeData","setButtonStates","setPageState","setIsTimerRunning","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","console","log","Audio","process","play","target","prevState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e0b1b6a.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction ModifyTimeControl({timeData, buttonState, formatTime, modifyDuration}) {\n\n    return (\n        <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              Focus Duration: {formatTime(timeData.focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                name=\"decrease-focus\"\n                disabled={buttonState.modifyDurationButtonsDisabled}\n                onClick={modifyDuration}\n              >\n                <span style={{zIndex: -1}} className=\"oi oi-minus\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                name=\"increase-focus\"\n                disabled={buttonState.modifyDurationButtonsDisabled}\n                onClick={modifyDuration}\n              >\n                <span style={{zIndex: -1}} className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                Break Duration: {formatTime(timeData.breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  name=\"decrease-break\"\n                  disabled={buttonState.modifyDurationButtonsDisabled}\n                  onClick={modifyDuration}\n                >\n                  <span style={{zIndex: -1}} className=\"oi oi-minus\" />\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  name=\"increase-break\"\n                  disabled={buttonState.modifyDurationButtonsDisabled}\n                  onClick={modifyDuration}\n                >\n                  <span style={{zIndex: -1}} className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n}\n\n\nexport default ModifyTimeControl","import React from \"react\"\nimport classNames from \"../utils/class-names\";\n\nfunction TimerControl({buttonState, playPause, stop, isTimerRunning}) {\n\n    return (\n        <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              disabled={buttonState.playButtonDisabled}\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              disabled={buttonState.stopButtonDisabled}\n              onClick={stop}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default TimerControl","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","import React from \"react\"\n\n\nfunction TimerDisplay({timeData, pageState, formatTime}) {\n    \n    return (\n        <div style={{display: pageState.showSession ? \"block\" : \"none\"}}>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <h2 data-testid=\"session-title\">{pageState.sessionTitle}</h2>\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {formatTime(timeData.currentRemaining)} remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={timeData.remainingAriaValue * 100}\n                style={{ width: `${timeData.remainingAriaValue * 100}%` }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default TimerDisplay","import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport ModifyTimeControl from \"./ModifyTimeControl\"\nimport TimerControl from \"./TimerControl\"\nimport TimerDisplay from \"./TimerDisplay\"\n\nfunction Pomodoro() {\n  const initialTimeState = {\n    focusDuration: 1500,\n    breakDuration: 300,\n    focusRemaining: 1500,\n    breakRemaining: 300,\n    remainingAriaValue: 0,\n    currentRemaining: 1500,\n  }\n\n  const initialVisibleElementStates = {\n    showSession: false,\n    sessionTitle: \"Focusing for 25:00 minutes\",\n  }\n\n  const initialButtonStates = {\n    modifyDurationButtonsDisabled: false,\n    playButtonDisabled: false,\n    stopButtonDisabled: true,\n  }\n\n  const activeButtonStates = {\n    modifyDurationButtonsDisabled: true,\n    playButtonDisabled: false,\n    stopButtonDisabled: false,\n  }\n\n  const formatTime = (seconds) => {\n    let formattedSeconds = parseInt(seconds, 10)\n    let mm = Math.floor(formattedSeconds / 60)\n    let ss = (formattedSeconds - mm * 60)\n    if (mm < 10 && ss < 10) {\n      return `0${mm}:0${ss}`\n    } else if (mm < 10 && ss > 9 ) {\n      return `0${mm}:${ss}`\n    } else if (mm > 9 && ss < 10) {\n      return `${mm}:0${ss}`\n    } else if (mm > 9 && ss > 9) {\n      return `${mm}:${ss}`\n    }\n  }\n\n  const [timeData, setTimeData] = useState(initialTimeState)\n  const [buttonState, setButtonStates] = useState(initialButtonStates)\n  const [pageState, setPageState] = useState(initialVisibleElementStates)\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n\n  const stop = () => {\n    setTimeData(initialTimeState)\n    setButtonStates(initialButtonStates)\n    setPageState(initialVisibleElementStates)\n    setIsTimerRunning(false)\n  }\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      if (timeData.focusRemaining > 0) {\n        pageState.sessionTitle = `Focusing for ${formatTime(timeData.focusDuration)} minutes`\n        console.log(timeData.currentRemaining)\n        timeData.currentRemaining = timeData.currentRemaining - 1\n        timeData.focusRemaining = timeData.currentRemaining\n        timeData.remainingAriaValue = 1 - timeData.currentRemaining / timeData.focusDuration\n        if (timeData.focusRemaining === 0) {\n          new Audio(`${process.env.PUBLIC_URL}/alarm/submarine-dive-horn.mp3`).play()\n          timeData.currentRemaining = timeData.breakRemaining\n          timeData.remainingAriaValue = 0\n        }\n      }\n      if (timeData.focusRemaining === 0 && timeData.breakRemaining > 0) {\n        pageState.sessionTitle = `On Break for ${formatTime(timeData.breakDuration)} minutes`\n        console.log(timeData.currentRemaining)\n        timeData.breakRemaining = timeData.currentRemaining\n        timeData.currentRemaining = timeData.currentRemaining - 1        \n        timeData.remainingAriaValue = 1 - timeData.currentRemaining / timeData.breakDuration\n        if (timeData.breakRemaining === 0) {\n          new Audio(`${process.env.PUBLIC_URL}/alarm/submarine-dive-horn.mp3`).play()\n          timeData.focusRemaining = timeData.focusDuration\n          timeData.breakRemaining = timeData.breakDuration\n          timeData.currentRemaining = timeData.focusDuration\n          console.log(timeData.focusRemaining, timeData.breakRemaining, timeData.currentRemaining)\n        }\n      }\n      setTimeData({...timeData})\n    },\n    isTimerRunning ? 1000 : null\n  );\n  \n  const modifyDuration = ({target}) => {\n    if (target.name === \"decrease-focus\" && timeData.focusDuration > 300 && timeData.focusDuration <= 3600) {\n      timeData.focusDuration = timeData.focusDuration - 300\n      timeData.focusRemaining = timeData.focusDuration\n      timeData.currentRemaining = timeData.focusDuration\n      pageState.sessionTitle = `Focusing for ${formatTime(timeData.focusDuration)} minutes`\n      console.log(pageState.sessionTitle)\n      setPageState({...pageState})\n      setTimeData({...timeData}) \n      //updatedTimeData.focusDuration = timeData.focusDuration\n    } else if (target.name === \"increase-focus\" && timeData.focusDuration >= 300 && timeData.focusDuration < 3600) {\n      timeData.focusDuration = timeData.focusDuration + 300\n      timeData.currentRemaining = timeData.focusDuration\n      timeData.focusRemaining = timeData.focusDuration\n      pageState.sessionTitle = `Focusing for ${formatTime(timeData.focusDuration)} minutes`\n      setPageState({...pageState})\n      setTimeData({...timeData})\n      //updatedTimeData.focusDuration = timeData.focusDuration\n    } else if (target.name === \"decrease-break\" && timeData.breakDuration > 60 && timeData.breakDuration <= 900) {\n      timeData.breakDuration = timeData.breakDuration - 60\n      timeData.breakRemaining = timeData.breakDuration\n      setPageState({...pageState})\n      setTimeData({...timeData})\n      //updatedTimeData.breakDuration = timeData.breakDuration\n    } else if (target.name === \"increase-break\" && timeData.breakDuration >= 60 && timeData.breakDuration < 900) {\n      timeData.breakDuration = timeData.breakDuration + 60\n      timeData.breakRemaining = timeData.breakDuration\n      setPageState({...pageState})\n      setTimeData({...timeData})\n      //updatedTimeData.breakDuration = timeData.breakDuration\n    }\n    console.log(\"target name:\", target, \"focus duration:\", timeData.focusDuration, \"break duration:\", timeData.breakDuration)\n  }\n\n  function playPause() {\n    pageState.showSession = true\n    setPageState({...pageState})\n    setButtonStates(activeButtonStates)\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <ModifyTimeControl timeData={timeData} buttonState={buttonState} formatTime={formatTime} modifyDuration={modifyDuration} />\n      <TimerControl buttonState={buttonState} playPause={playPause} stop={stop} isTimerRunning={isTimerRunning} />\n      <TimerDisplay timeData={timeData} pageState={pageState} formatTime={formatTime} />\n    </div>\n  );\n}\n\n\nexport default Pomodoro;\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}